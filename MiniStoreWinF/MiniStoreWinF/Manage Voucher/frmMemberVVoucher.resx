<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="M.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="V.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        qNXU/AcEE+5JS8J8mAAAAABJRU5ErkJggg==
</value>
  </data>
</root>